<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <resultMap id="result" type="com.example.demo.entity.User">
        <result property="userId" column="userId" />
		<result property="userDate" column="userDate" />
        <result property="userName" column="userName" />
        <result property="userAddress" column="userAddress"/>
		<result property="userGrade" column="userGrade"/>
    </resultMap>


	<resultMap id="memory" type="com.example.demo.entity.User">
		<result property="actionId" column="actionId" />
		<result property="userId" column="userId" />
		<result property="userDate" column="userDate" />
		<result property="userName" column="userName" />
		<result property="type" column="type" />
		<result property="actionGrade" column="actionGrade"/>
		<result property="userGrade" column="userGrade"/>
	</resultMap>

    <select id="ListUser" resultMap="result">
		SELECT * FROM user
	</select>

	<select id="memory" resultMap="memory">
		SELECT * FROM memory where  userId=#{userId} order by userDate desc
	</select>

	<select id="today" resultMap="memory">
		SELECT * FROM memory where userDate>#{userDate} order by userDate desc
	</select>


	<select id="findUserByName" resultMap="result" parameterType="String">
		SELECT * FROM user
			where userName like concat(concat('%',#{userName}),'%')
			order by userId desc
	</select>

	<select id="queryPage" resultMap="result"  parameterType="Integer">
		select * from user
			order by userId desc
			limit #{startRows},5
	</select>

	<select id="getRowCount" resultType="Integer">
		select count(*) from user
	</select>

	<select id="grade" resultType="Integer">
		select userGrade from user where user.userId=#{userId}
	</select>

    <insert id="insertUser" parameterType="com.example.demo.entity.User">
		INSERT INTO user
		(
		userId,userDate,userName,userAddress,userGrade
		)
		VALUES (
		#{userId},
		#{userDate, jdbcType=VARCHAR},
		#{userName, jdbcType=VARCHAR},
		#{userAddress, jdbcType=VARCHAR},
		#{userGrade, jdbcType=VARCHAR}
		)
	</insert>


    <delete id="delete" parameterType="int">
		delete from test.user where userId=#{userId}
	</delete>

    <update id="Update" parameterType="com.example.demo.entity.User">
		update user
			set user.userDate=#{userDate},user.userName=#{userName},user.userAddress=#{userAddress},user.userGrade=#{userGrade}
			where user.userId=#{userId}
	</update>

	<update id="Cun" parameterType="com.example.demo.entity.User">

		update user
		set user.userGrade=#{userGrade}
		where user.userId=#{userId}
	</update>

	<insert id="insertMemory" parameterType="com.example.demo.entity.User">
		INSERT INTO memory
		(
			actionId,userId,userDate,userName,type,actionGrade,userGrade
		)
		VALUES (
				   #{actionId},
				   #{userId, jdbcType=INTEGER},
				   #{userDate, jdbcType=VARCHAR},
				   #{userName, jdbcType=VARCHAR},
				   #{type, jdbcType=INTEGER},
				   #{actionGrade, jdbcType=INTEGER},
				   #{userGrade, jdbcType=INTEGER}
			   )
	</insert>


</mapper>
