<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD com.example.Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.InventoryMapper">

    <resultMap id="result" type="com.example.demo.entity.Inventory">
        <result property="newId" column="newId" />
		<result property="name" column="name" />
        <result property="quantity" column="quantity" />
        <result property="price" column="price"/>
		<result property="remark" column="remark"/>
    </resultMap>


	<resultMap id="memory" type="com.example.demo.entity.User">
		<result property="actionId" column="actionId" />
		<result property="userId" column="userId" />
		<result property="userDate" column="userDate" />
		<result property="userName" column="userName" />
		<result property="type" column="type" />
		<result property="actionGrade" column="actionGrade"/>
		<result property="userGrade" column="userGrade"/>
	</resultMap>



	<select id="queryPage" resultMap="result"  parameterType="Integer">
		select * from inventory where newId>0
			order by newId asc
			limit #{startRows},5
	</select>

	<select id="getRowCount" resultType="Integer">
		select count(*) from inventory
	</select>

	<insert id="insertInventory" parameterType="com.example.demo.entity.Inventory">
		INSERT INTO inventory
		(
			newId,name,quantity,price
		)
		VALUES (
				   #{newId},
				   #{name, jdbcType=VARCHAR},
				   #{quantity, jdbcType=INTEGER},
				   #{price, jdbcType=INTEGER}
			   )
	</insert>
	<update id="Cun" parameterType="com.example.demo.entity.User">

		update inventory
		set inventory.quantity=#{quantity}
		where inventory.newId=#{newId}
	</update>


</mapper>
